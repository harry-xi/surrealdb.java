name: Cross-Compile

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cross:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu # linux 64 intel
          - aarch64-unknown-linux-gnu # linux 64 arm
          - i686-unknown-linux-gnu # linux 32 intel
          - armv7-unknown-linux-gnueabihf # linux 32 arm
          - x86_64-linux-android # android 64 intel
          - aarch64-linux-android # android 64 arm
          - i686-linux-android # android 32 intel
          - armv7-linux-androideabi # android 32 arm
          - x86_64-pc-windows-gnu # windows 64 intel
          - i686-pc-windows-msvc # windows 32 intel
        include:
          - target: x86_64-linux-android
            cross: --git https://github.com/cross-rs/cross

          - target: aarch64-linux-android
            cross: --git https://github.com/cross-rs/cross

          - target: i686-linux-android
            cross: --git https://github.com/cross-rs/cross

          - target: armv7-linux-androideabi
            cross: --git https://github.com/cross-rs/cross
            optional: true

          - target: i686-linux-android
            cross: --git https://github.com/cross-rs/cross

          - target: i686-pc-windows-msvc
            optional: true

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.optional || false }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install cross
        run: cargo install cross ${{ matrix.cross }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Pull cross Docker image
        run: docker pull rustembedded/cross:${{ matrix.target }}

      - name: Cross compile
        run: cross build --target ${{ matrix.target }} --release ${{ matrix.build }}

      - name: Upload so lib
        if: matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu'
          || matrix.target == 'x86_64-linux-android' || matrix.target == 'aarch64-linux-android'
          || matrix.target == 'i686-unknown-linux-gnu' || matrix.target == 'armv7-unknown-linux-gnueabihf'
          || matrix.target == 'i686-linux-android' || matrix.target == 'armv7-linux-androideabi'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: target/${{ matrix.target }}/release/*.so

      - name: Upload dll lib
        if: matrix.target == 'x86_64-pc-windows-gnu' || matrix.target == 'i686-pc-windows-msvc'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: target/${{ matrix.target }}/release/*.dll

  macos-intel:
    runs-on: macos-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --target x86_64-apple-darwin --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-apple-darwin-build
          path: target/x86_64-apple-darwin/release/*.dylib

  macos-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --target aarch64-apple-darwin --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-apple-darwin-build
          path: target/aarch64-apple-darwin/release/*.dylib

  aggregated-jar:
    runs-on: ubuntu-latest
    needs:
      - cross
      - macos-intel
      - macos-arm
    steps:
      - name: Install dependencies
        run: sudo apt-get update

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Gradle
        run: chmod +x gradlew

      - name: Create directories for artifacts
        run: |
          mkdir -p src/main/resources/natives/android_64
          mkdir -p src/main/resources/natives/android_32
          mkdir -p src/main/resources/natives/android_arm64
          mkdir -p src/main/resources/natives/android_arm32
          mkdir -p src/main/resources/natives/linux_64
          mkdir -p src/main/resources/natives/linux_32
          mkdir -p src/main/resources/natives/linux_arm64
          mkdir -p src/main/resources/natives/linux_arm32
          mkdir -p src/main/resources/natives/osx_64
          mkdir -p src/main/resources/natives/osx_arm64
          mkdir -p src/main/resources/natives/windows_64
          mkdir -p src/main/resources/natives/windows_32

      - name: Download Android 64 intel
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-android-build
          path: src/main/resources/natives/android_64

      - name: Download Android 32 intel
        uses: actions/download-artifact@v4
        with:
          name: i686-linux-android-build
          path: src/main/resources/natives/android_32

      - name: Download Android 64 arm
        uses: actions/download-artifact@v4
        with:
          name: aarch64-linux-android-build
          path: src/main/resources/natives/android_arm64

      - name: Download Android 32 arm
        uses: actions/download-artifact@v4
        with:
          name: armv7-linux-androideabi
          path: src/main/resources/natives/android_arm32
        continue-on-error: true # Until fixed!

      - name: Download Linux 64 intel
        uses: actions/download-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu-build
          path: src/main/resources/natives/linux_64

      - name: Download Linux 32 intel
        uses: actions/download-artifact@v4
        with:
          name: i686-unknown-linux-gnu-build
          path: src/main/resources/natives/linux_32

      - name: Download Linux 64 arm
        uses: actions/download-artifact@v4
        with:
          name: aarch64-unknown-linux-gnu-build
          path: src/main/resources/natives/linux_arm64

      - name: Download Linux 32 arm
        uses: actions/download-artifact@v4
        with:
          name: armv7-unknown-linux-gnueabihf-build
          path: src/main/resources/natives/linux_arm32

      - name: Download Darwin 64 intel
        uses: actions/download-artifact@v4
        with:
          name: x86_64-apple-darwin-build
          path: src/main/resources/natives/osx_64

      - name: Download Darwin 64 arm
        uses: actions/download-artifact@v4
        with:
          name: aarch64-apple-darwin-build
          path: src/main/resources/natives/osx_arm64

      - name: Download Windows 64 intel
        uses: actions/download-artifact@v4
        with:
          name: x86_64-pc-windows-gnu-build
          path: src/main/resources/natives/windows_64

      - name: Download Windows 32 intel
        uses: actions/download-artifact@v4
        with:
          name: i686-pc-windows-msvc-build
          path: src/main/resources/natives/windows_32
        continue-on-error: true # Until fixed!

      - name: Build JAR
        run: ./gradlew jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: surrealdb-jni
          path: build/libs/surrealdb-jni-0.2-SNAPSHOT.jar

      - name: Linux Integration Test
        run: ./gradlew -i integrationTest

  windows-integration-test:
    runs-on: windows-latest
    needs:
      - aggregated-jar
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Gradle
        run: chmod +x gradlew

      - name: Create directory build/libs
        run: mkdir -p build/libs

      - name: Download lib
        uses: actions/download-artifact@v4
        with:
          name: surrealdb-jni
          path: build/libs

      - name: Windows Integration Test
        run: ./gradlew -i integrationTest

  mac-intel-integration-test:
    runs-on: macos-12
    needs:
      - aggregated-jar
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Gradle
        run: chmod +x gradlew

      - name: Create directory build/libs
        run: mkdir -p build/libs

      - name: Download lib
        uses: actions/download-artifact@v4
        with:
          name: surrealdb-jni
          path: build/libs

      - name: Mac Integration Test
        run: ./gradlew -i integrationTest

  mac-arm-integration-test:
    runs-on: macos-latest
    needs:
      - aggregated-jar
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Gradle
        run: chmod +x gradlew

      - name: Create directory build/libs
        run: mkdir -p build/libs

      - name: Download lib
        uses: actions/download-artifact@v4
        with:
          name: surrealdb-jni
          path: build/libs

      - name: Mac Integration Test
        run: ./gradlew -i integrationTest